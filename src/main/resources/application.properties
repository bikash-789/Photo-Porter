# ===============================================
# Application Configuration
# ===============================================
spring.application.name=photo-porter
server.port=8080
server.servlet.context-path=/api/v1

# ===============================================
# Database Configuration (fixed host + user)
# Inside Docker, use the MySQL service name, not localhost
# MySQL container has MYSQL_USER=photo_porter / MYSQL_PASSWORD=password
# ===============================================
spring.datasource.url=jdbc:mysql://mysql:3306/photo_porter?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=photo_porter
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# ===============================================
# JPA / Hibernate Configuration
# ===============================================
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# ===============================================
# Google OAuth2 Configuration
# ===============================================
google.client.id=${GOOGLE_CLIENT_ID:abcdefghijklmnopqrstuvwxyz}
google.client.secret=${GOOGLE_CLIENT_SECRET:abcdefghijklmnopqrstuvwxyz}
google.redirect.uri=${GOOGLE_REDIRECT_URI:http://localhost:8080/api/v1/auth/callback}

# ===============================================
# Kafka Configuration (fixed host)
# Use Kafka service name inside Docker network
# ===============================================
spring.kafka.bootstrap-servers=${KAFKA_BOOTSTRAP_SERVERS:kafka:9092}
spring.kafka.consumer.group-id=photo-transfer-group
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=false

# Kafka Topic Configuration
photo.kafka.topic=photo-transfer-topic

# ===============================================
# Logging Configuration
# ===============================================
logging.level.com.bikash.photo_porter=INFO
logging.level.org.springframework.kafka=INFO
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n

# ===============================================
# Actuator / Health Check Configuration
# ===============================================
management.endpoints.web.exposure.include=health,info,metrics,env,configprops
management.endpoint.health.show-details=always
management.endpoint.health.show-components=always

# ===============================================
# Security (Spring Boot default basic auth for Actuator etc.)
# ===============================================
spring.security.user.name=admin
spring.security.user.password=admin

# ===============================================
# File Upload Configuration
# ===============================================
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# ===============================================
# Async Thread Pool Configuration
# ===============================================
spring.task.execution.pool.core-size=5
spring.task.execution.pool.max-size=10
spring.task.execution.pool.queue-capacity=25
spring.task.execution.thread-name-prefix=photo-porter-

# ===============================================
# Cache Configuration
# ===============================================
spring.cache.type=caffeine
spring.cache.caffeine.spec=maximumSize=500,expireAfterWrite=600s

# ===============================================
# Active Profile
# ===============================================
spring.profiles.active=default

# Error Display
server.error.include-message=always
server.error.include-binding-errors=always

# ===============================================
# Metrics
# ===============================================
management.metrics.export.prometheus.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true

# Health Checks
management.health.defaults.enabled=true
management.health.db.enabled=true
management.health.diskspace.enabled=true

# ===============================================
# Hibernate Performance Tweaks
# ===============================================
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
